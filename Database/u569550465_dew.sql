-- phpMyAdmin SQL Dump
-- version 5.2.2
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3306
-- Generation Time: Sep 09, 2025 at 05:41 AM
-- Server version: 10.11.10-MariaDB-log
-- PHP Version: 7.2.34

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `u569550465_dew`
--

-- --------------------------------------------------------

--
-- Table structure for table `admin_settings`
--

CREATE TABLE `admin_settings` (
  `id` int(11) NOT NULL,
  `file_limit` int(11) NOT NULL,
  `auto_delete_time` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `admin_settings`
--

INSERT INTO `admin_settings` (`id`, `file_limit`, `auto_delete_time`) VALUES
(1, 50, 1);

-- --------------------------------------------------------

--
-- Table structure for table `user_files`
--

CREATE TABLE `user_files` (
  `username` varchar(255) NOT NULL,
  `file_path` varchar(255) NOT NULL,
  `delete_at` int(11) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT current_timestamp(),
  `is_locked` tinyint(1) DEFAULT 0,
  `file_password` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `user_files`
--

INSERT INTO `user_files` (`username`, `file_path`, `delete_at`, `created_at`, `is_locked`, `file_password`) VALUES
('cs', 'uploads/Scope.docx', 1750323347, '2025-06-19 08:54:47', 1, NULL),
('cs last lab', 'uploads/cs last lab_1756981723_93eee920.zip', 1756981783, '2025-09-04 15:58:43', 1, NULL),
('DAA Lab 07', 'uploads/DAA Lab 07_1754903593_88f4b9fb.zip', 1754903653, '2025-08-11 14:43:13', 1, NULL),
('DAA LAB 2 Kavizz', 'uploads/DAA Lab 2.zip', 1750670292, '2025-06-23 09:17:12', 1, NULL),
('DAA week 1', 'uploads/Week 01 DAA.zip', 1750064165, '2025-06-16 08:55:05', 1, NULL),
('KkkTok', 'uploads/Lab DS Tokka.zip', 1753264569, '2025-07-23 09:55:09', 1, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `user_texts`
--

CREATE TABLE `user_texts` (
  `username` varchar(255) NOT NULL,
  `text` text NOT NULL,
  `saved_at` timestamp NULL DEFAULT current_timestamp(),
  `created_at` timestamp NULL DEFAULT current_timestamp(),
  `is_protected` tinyint(1) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `user_texts`
--

INSERT INTO `user_texts` (`username`, `text`, `saved_at`, `created_at`, `is_protected`) VALUES
('2002-01', '```\nWeek 01\n=======\nLab Worksheet 01\n----------------\nDesign and Analysis of Algorithms\nLab Worksheet 01\n\n1. Create your first program and execute using C Language. Save the file as Ex01.c\n#include <stdio.h>\n\nint main() {\n    // Write C code here\n    printf(\"Welcome to C Language World\");\n    return 0;\n}\n2. Develop and Execute a new program to display your Name at the console screen. Save the file as Ex02.c.\n3. Create a program to display your Name, registration number and age. Save the file as Ex03.c\n4. Write a c program to get two integers from the stdin and output the sum of two integers them to standard output. Save the file as Ex04.c\n5. Write the program to print the following table of Fahrenheit temperatures and their Celsius equivalents. [ Use the formula c = 5/9 (f - 32)]. Save the file as Ex05.c\n\n| Fahrenheit | Celsius |\n|------------|---------|\n| 0          | -17     |\n| 20         | -6      |\n| 40         | 4       |\n\n200\nUpdate: 2024(SLIT CITY UNI)\nBy: Anuruddha Abeysinghe\n\nEx01.c\n------\n#include <stdio.h>\nint main() {\n    printf(\"Welcome to C language world..\");\n    return 0;\n}\n\nEx02.c\n------\n#include <stdio.h>\nint main() {\n    printf(\"My name is Buddhi Jayasundara\");\n    return 0;\n}\n\nEx03.c\n------\n#include <stdio.h>\nint main() {\n    printf(\"Name: Buddhi Jayasundara\\nReg no: SA23341036\\nAge: 21\");\n    return 0;\n}\n\nEx04.c\n------\n#include <stdio.h>\nint main() {\n    int num1, num2;\n    printf(\"Enter num1: \");\n    scanf(\"%d\", &num1);\n    printf(\"Enter num2: \");\n    scanf(\"%d\", &num2);\n    int sum = num1 + num2;\n    printf(\"The sum is %d\\n\", sum);\n    return 0;\n}\n\nEx05.c\n------\n#include <stdio.h>\nint main() {\n    int farenheit;\n    float celcius;\n    printf(\"Farenheit\\t\\tCelcius\\n\");\n    for (farenheit = 0; farenheit <= 200; farenheit += 20) {\n        celcius = 5.0 / 9.0 * (farenheit - 32);\n        printf(\"%d\\t\\t%f\\n\", farenheit, celcius);\n    }\n    return 0;\n}\n\nWeek 02\n=======\nLab Worksheet 02\n----------------\nDesign and Analysis of Algorithm\nLab Worksheet 02\n\n1. Create a program to find the product of two numbers and print the output.\n2. Write a C program to compute the quotient of two integers and display the result (integer division).\n3. Develop a program to calculate the remainder of division between two integers.\n4. Write a program to calculate the area of a rectangle given its length and width as 10 and 5. Then update the program to accept the length and height as user inputs and process the activity.\n5. Create a C program to calculate the area of a circle based on its radius. Use the formula: Area = r * r (where r is approximately 3.14159).\n6. Write a program to calculate the total cost of a purchase, including tax. Give the item price and tax rate as user inputs (in percentage).\n7. Create a C program to convert a given number of minutes into hours and minutes. For example, 145 minutes should be displayed as 2 hours and 25 minutes.\n8. Write a program to find the sum of all elements in an integer array. Enter the array elements as User inputs.\n9. Write a C program to find the maximum element and minimum element in an integer array.\n10. Develop a C program to get a summation of similar index values in 2 Integer arrays and store it in new array. Display the summated array elements at screen.\n\nEx01.c\n------\n#include <stdio.h>\nint main() {\n    int num1, num2, ans;\n    printf(\"Enter value for number 1: \");\n    scanf(\"%d\", &num1);\n    printf(\"Enter value for number 2: \");\n    scanf(\"%d\", &num2);\n    ans = num1 * num2;\n    printf(\"Product: %d\\n\", ans);\n    return 0;\n}\n\nEx02.c\n------\n#include <stdio.h>\nint main() {\n    int num1, num2, ans;\n    printf(\"Enter value for number 1: \");\n    scanf(\"%d\", &num1);\n    printf(\"Enter value for number 2: \");\n    scanf(\"%d\", &num2);\n    ans = num1 / num2;\n    printf(\"Quotient: %d\\n\", ans);\n    return 0;\n}\n\nEx03.c\n------\n#include <stdio.h>\nint main() {\n    int num1, num2, ans;\n    printf(\"Enter value for number 1: \");\n    scanf(\"%d\", &num1);\n    printf(\"Enter value for number 2: \");\n    scanf(\"%d\", &num2);\n    ans = num1 % num2;\n    printf(\"Remainder: %d\\n\", ans);\n    return 0;\n}\n\nEx04.c\n------\n#include <stdio.h>\nint main() {\n    int length = 10, width = 5, area;\n    printf(\"Enter value for length: \");\n    scanf(\"%d\", &length);\n    printf(\"Enter value for width: \");\n    scanf(\"%d\", &width);\n    area = length * width;\n    printf(\"Area: %d\\n\", area);\n    return 0;\n}\n\nEx05.c\n------\n#include <stdio.h>\nint main() {\n    float radius, pi = 3.14159, cArea;\n    printf(\"Enter radius: \");\n    scanf(\"%f\", &radius);\n    cArea = pi * radius * radius;\n    printf(\"Area: %f\\n\", cArea);\n    return 0;\n}\n\nEx06.c\n------\n#include <stdio.h>\nint main() {\n    float price, tax_rate, total;\n    printf(\"Enter price: \");\n    scanf(\"%f\", &price);\n    printf(\"Enter tax rate: \");\n    scanf(\"%f\", &tax_rate);\n    total = price + (price * (tax_rate / 100));\n    printf(\"Total: %f\\n\", total);\n    return 0;\n}\n\nEx07.c\n------\n#include <stdio.h>\nint main() {\n    int mins, cHours, cMins;\n    printf(\"Enter number of minutes: \");\n    scanf(\"%d\", &mins);\n    cHours = mins / 60;\n    cMins = mins % 60;\n    printf(\"%d hours %d minutes\\n\", cHours, cMins);\n    return 0;\n}\n\nEx08.c\n------\n#include <stdio.h>\nint main() {\n    int nOElements, sum = 0, i;\n    printf(\"Enter how many numbers do you want in the array: \");\n    scanf(\"%d\", &nOElements);\n    int arr[nOElements];\n    for (i = 0; i < nOElements; i++) {\n        printf(\"Enter value for number %d: \", i + 1);\n        scanf(\"%d\", &arr[i]);\n        sum = sum + arr[i];\n    }\n    printf(\"Sum of elements is: %d\\n\", sum);\n    return 0;\n}\n\nEx09.c\n------\n#include <stdio.h>\nint main() {\n    int nOElements, i, max, min;\n    printf(\"Enter how many numbers do you want in the array: \");\n    scanf(\"%d\", &nOElements);\n    int arr[nOElements];\n    for (i = 0; i < nOElements; i++) {\n        printf(\"Enter value for number %d: \", i + 1);\n        scanf(\"%d\", &arr[i]);\n        if (i == 0) {\n            max = arr[i];\n            min = arr[i];\n        }\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    printf(\"Largest number is: %d\\n\", max);\n    printf(\"Smallest number is: %d\\n\", min);\n    return 0;\n}\n\nEx10.c\n------\n#include <stdio.h>\nint main() {\n    int nOElements, i;\n    printf(\"Enter how many numbers do you want in the array: \");\n    scanf(\"%d\", &nOElements);\n    int arr1[nOElements], arr2[nOElements], arr3[nOElements];\n    for (i = 0; i < nOElements; i++) {\n        printf(\"Enter value for number %d in first array: \", i + 1);\n        scanf(\"%d\", &arr1[i]);\n    }\n    for (i = 0; i < nOElements; i++) {\n        printf(\"Enter value for number %d in second array: \", i + 1);\n        scanf(\"%d\", &arr2[i]);\n    }\n    for (i = 0; i < nOElements; i++) {\n        arr3[i] = arr1[i] + arr2[i];\n    }\n    for (i = 0; i < nOElements; i++) {\n        printf(\"arr3[%d] = %d\\n\", i, arr3[i]);\n    }\n    return 0;\n}\n\nWeek 03\n=======\nLab Worksheet 03\n----------------\nDesign and Analysis of Algorithm\nLab Worksheet 03\n\n1. Write a code part to manage the Factorial Series using recursion method.\n2. Write a code part to manage the Fibonacci Series using recursion method.\n3. The number of bacteria in a colony doubles every hour. If the colony begins with five bacteria, how many will be present in 2 hours? Write a C code to get the answer.\n4. Develop a C program to calculate the summation of each digit in a given number using recursion method.\nExample Output:\nEnter Number : 12345\nSum of 12345 is: 15\n5. Develop a C program to calculate the value of x raised to the power of y using recursion.\nExample Output:\nEnter Base : 2\nEnter Exponent: 3\n2 raised to the power of 3 is 8\nUpdate: 2024(SLIIIT City Uni)\nBy: Anuruddha Abeysinghe\n\nEx01.c\n------\n#include <stdio.h>\nint factorial(int n) {\n    if (n == 0) {\n        return 1; // base case or condition\n    }\n    else {\n        return n * factorial(n - 1);\n    }\n}\nint main() {\n    int n = 3;\n    printf(\"Factorial for %d is = %d\\n\", n, factorial(n));\n    return 0;\n}\n\nEx02.c\n------\n#include <stdio.h>\nint fibonacci(int n) {\n    if (n <= 1) {\n        return n;\n    }\n    else {\n        return fibonacci(n - 1) + fibonacci(n - 2);\n    }\n}\nint main() {\n    int n = 7;\n    printf(\"Fibonacci for location %d is %d\\n\", n, fibonacci(n));\n    return 0;\n}\n\nEx03.c\n------\n#include <stdio.h>\nint bacteria(int hours) {\n    if (hours == 0) {\n        return 5;\n    }\n    else {\n        return 2 * bacteria(hours - 1);\n    }\n}\nint main() {\n    int h = 2;\n    printf(\"Bacteria count after %d hours: %d\\n\", h, bacteria(h));\n    return 0;\n}\n\nEx04.c\n------\n#include <stdio.h>\nint sum(int n) {\n    if (n == 0) {\n        return 0;\n    }\n    else {\n        return (n % 10) + sum(n / 10);\n    }\n}\nint main() {\n    int n;\n    printf(\"Enter number: \");\n    scanf(\"%d\", &n);\n    printf(\"Sum of %d is %d\\n\", n, sum(n));\n    return 0;\n}\n\nEx05.c\n------\n#include <stdio.h>\nint power(int x, int y) {\n    if (y == 0) {\n        return 1;\n    }\n    else {\n        return x * power(x, y - 1);\n    }\n}\nint main() {\n    int x, y;\n    printf(\"Enter Base: \");\n    scanf(\"%d\", &x);\n    printf(\"Enter Exponent: \");\n    scanf(\"%d\", &y);\n    printf(\"%d raised to the power of %d is %d\\n\", x, y, power(x, y));\n    return 0;\n}\n', '2025-07-28 02:20:24', '2025-07-28 02:20:24', 1),
('2002-2', '\n\nWeek 04\n=======\nLab Worksheet 04\n----------------\nDesign and Analysis of Algorithm\nLab Worksheet 04\n\n1. Write a C program that takes input of the prices of different products in a store and sorts them using Insertion Sort in ascending order.\nInput: Number of products and their prices.\nOutput: Sorted product prices.\n2. Write a C program that inputs the ages of employees in a company and sorts them in descending order using Selection Sort.\nInput: The number of employees and their respective ages.\nOutput: The ages sorted in descending order.\n3. Write a C program that takes input of student scores in a class, and sorts them in ascending order using Bubble Sort.\nInput: The program should take the number of students and their respective scores.\nOutput: The sorted list of scores.\nUpdate: 2024(SL1IT City Uni)\nBy: Anuruddtha Abeysinghe\n\nEx01.c\n------\n#include <stdio.h>\nvoid insertionSort(int prices[], int count) {\n    int i, j, current;\n    for (i = 1; i < count; i++) {\n        current = prices[i];\n        j = i - 1;\n        while (j >= 0 && prices[j] > current) {\n            prices[j + 1] = prices[j];\n            j = j - 1;\n        }\n        prices[j + 1] = current;\n    }\n}\nint main() {\n    int numProducts, i;\n    int prices[100];\n    printf(\"Enter number of products: \");\n    scanf(\"%d\", &numProducts);\n    printf(\"Enter product prices:\\n\");\n    for (i = 0; i < numProducts; i++) {\n        scanf(\"%d\", &prices[i]);\n    }\n    insertionSort(prices, numProducts);\n    printf(\"Sorted prices (Ascending): \");\n    for (i = 0; i < numProducts; i++) {\n        printf(\"%d \", prices[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n\nEx02.c\n------\n#include <stdio.h>\nvoid selectionSort(int ages[], int count) {\n    int i, j, maxIdx, temp;\n    for (i = 0; i < count - 1; i++) {\n        maxIdx = i;\n        for (j = i + 1; j < count; j++) {\n            if (ages[j] > ages[maxIdx]) {\n                maxIdx = j;\n            }\n        }\n        temp = ages[i];\n        ages[i] = ages[maxIdx];\n        ages[maxIdx] = temp;\n    }\n}\nint main() {\n    int numEmployees, i;\n    int ages[100];\n    printf(\"Enter number of employees: \");\n    scanf(\"%d\", &numEmployees);\n    printf(\"Enter employee ages:\\n\");\n    for (i = 0; i < numEmployees; i++) {\n        scanf(\"%d\", &ages[i]);\n    }\n    selectionSort(ages, numEmployees);\n    printf(\"Sorted ages (Descending): \");\n    for (i = 0; i < numEmployees; i++) {\n        printf(\"%d \", ages[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n\nEx03.c\n------\n#include <stdio.h>\nvoid bubbleSort(int scores[], int count) {\n    int i, j, temp;\n    for (i = 0; i < count - 1; i++) {\n        for (j = 0; j < count - i - 1; j++) {\n            if (scores[j] > scores[j + 1]) {\n                temp = scores[j];\n                scores[j] = scores[j + 1];\n                scores[j + 1] = temp;\n            }\n        }\n    }\n}\nint main() {\n    int numStudents, i;\n    int scores[100];\n    printf(\"Enter number of students: \");\n    scanf(\"%d\", &numStudents);\n    printf(\"Enter student scores:\\n\");\n    for (i = 0; i < numStudents; i++) {\n        scanf(\"%d\", &scores[i]);\n    }\n    bubbleSort(scores, numStudents);\n    printf(\"Sorted scores (Ascending): \");\n    for (i = 0; i < numStudents; i++) {\n        printf(\"%d \", scores[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```', '2025-07-28 02:20:54', '2025-07-28 02:20:54', 1),
('abdozico5', 'proxy.geonode.io:12000:geonode_EFVhZ2r88t-type-residential-country-eg-lifetime-3-session-mU9cZp:41668731-bf6b-458f-93cc-828169bd0016', '2025-07-14 14:40:55', '2025-07-14 14:40:55', 1),
('adee90', 'CREATE TABLE Food_Collection_182 (\n    id INT,\n    xDoc XML\n);\n\nINSERT INTO Food_Collection_182(id, xDoc)\nVALUES \n(\n    1,\n    CAST(\n    \'<breakfast_menu>\n<food type=\"Waffles\">\n<name> Belgian Waffles</name>\n<price>60</price>\n<description>Two of our famous Belgian Waffles with plenty of real maple syrup</description>\n<calories>650</calories>\n</food>\n<food type=\"Waffles\">\n<name>Strawberry Belgian Waffles</name>\n<price>75</price>\n<description>Light Belgian waffles covered with strawberries and whipped cream</description>\n<calories>900</calories>\n</food>\n<food type=\"Waffles\">\n<name>Berry-Berry Belgian Waffles</name>\n<price>80</price>\n<description>Light Belgian waffles covered with an assortment of fresh berries and whipped cream</description>\n<calories>900</calories>\n</food>\n<food type=\"Toast\">\n<name>French Toast</name>\n<price>45</price>\n<description>Thick slices made from our homemade sourdough bread</description>\n<calories>600</calories>\n</food>\n<food type=\"Toast\">\n<name>Homestyle Breakfast</name>\n<price>70</price>\n<description>Two eggs, bacon or sausage, toast, and our ever-popular hash browns</description>\n<calories>950</calories>\n</food>\n<food type=\"Quesadillas\">\n<name>BBQ Chicken</name>\n<price>100</price>\n<description>Chicken, tortillas, BBQ Sauce, Cheese</description>\n<calories>1250</calories>\n</food>\n<food type=\"Quesadillas\">\n<name>Spinach and Mushroom</name>\n<price>100</price>\n<description>Spinach, Mushroom, tortillas, Cheese, Garlic</description>\n<calories>950</calories>\n</food>\n</breakfast_menu>\' AS XML)\n);\n\nSELECT \n    T.x.query(\'.\') AS FoodElement\nFROM Food_Collection_182\nCROSS APPLY xDoc.nodes(\'/breakfast_menu/food\') AS T(x)\nORDER BY T.x.value(\'@type\', \'VARCHAR(50)\') DESC;\n\nSELECT \n    T.x.value(\'name[1]\', \'VARCHAR(100)\') AS FoodName\nFROM Food_Collection_182\nCROSS APPLY xDoc.nodes(\'/breakfast_menu/food\') AS T(x);\n\nSELECT \n    T.x.value(\'data(name)\', \'VARCHAR(100)\') AS WaffleName\nFROM Food_Collection_182\nCROSS APPLY xDoc.nodes(\'/breakfast_menu/food\') AS T(x)\nWHERE T.x.value(\'@type\', \'VARCHAR(50)\') = \'Waffle\';\n\n\nSELECT \n    T.x.value(\'data(name)\', \'VARCHAR(100)\') AS ToastName\nFROM Food_Collection_182\nCROSS APPLY xDoc.nodes(\'/breakfast_menu/food\') AS T(x)\nWHERE T.x.value(\'@type\', \'VARCHAR(50)\') = \'Toast\';\n\nSELECT \n    T.x.value(\'name[1]\', \'VARCHAR(100)\') AS FoodName\nFROM Food_Collection_182\nCROSS APPLY xDoc.nodes(\'/breakfast_menu/food\') AS T(x)\nWHERE T.x.value(\'price[1]\', \'INT\') BETWEEN 60 AND 100;\n\nSELECT \n    T.x.value(\'name[1]\', \'VARCHAR(100)\') AS FoodName\nFROM Food_Collection_182\nCROSS APPLY xDoc.nodes(\'/breakfast_menu/food\') AS T(x)\nWHERE T.x.value(\'price[1]\', \'INT\') > 80;\n\n', '2025-07-23 08:51:13', '2025-07-23 08:51:13', 1),
('adeesha 8262', '-- activity 01--\n\ncreate table Food_Collection_Sa23800182 (\nid int primary key,\nxDoc xml not null\n)\n\nselect * from Food_Collection_Sa23800182 \n\n \n -- Activity 02-- \n\ninsert into Food_Collection_Sa23800182 values\n\n(1,\'<breakfast_menu>\n<food type=\"Waffles\">\n<name> Belgian Waffles</name>\n<price>60</price>\n<description>Two of our famous Belgian Waffles with plenty of real maple syrup</description>\n<calories>650</calories>\n</food>\n<food type=\"Waffles\">\n<name>Strawberry Belgian Waffles</name>\n<price>75</price>\n<description>Light Belgian waffles covered with strawberries and whipped cream</description>\n<calories>900</calories>\n</food>\n<food type=\"Waffles\">\n<name>Berry-Berry Belgian Waffles</name>\n<price>80</price>\n<description>Light Belgian waffles covered with an assortment of fresh berries and whipped cream</description>\n<calories>900</calories>\n</food>\n<food type=\"Toast\">\n<name>French Toast</name>\n<price>45</price>\n<description>Thick slices made from our homemade sourdough bread</description>\n<calories>600</calories>\n</food>\n<food type=\"Toast\">\n<name>Homestyle Breakfast</name>\n<price>70</price>\n<description>Two eggs, bacon or sausage, toast, and our ever-popular hash browns</description>\n<calories>950</calories>\n</food>\n<food type=\"Quesadillas\">\n<name>BBQ Chicken</name>\n<price>100</price>\n<description>Chicken, tortillas, BBQ Sauce, Cheese</description>\n<calories>1250</calories>\n</food>\n<food type=\"Quesadillas\">\n<name>Spinach and Mushroom</name>\n<price>100</price>\n<description>Spinach, Mushroom, tortillas, Cheese, Garlic</description>\n<calories>950</calories>\n</food>\n</breakfast_menu>\')\n\n-- Activity 02 (get all food item names)\nselect xDoc.query(\' \n					for $food in //food\n					let $name := $food/name\n					return data($name)\')\n\nfrom Food_Collection_Sa23800182\n\n\n\n-- Activity03--\n\nselect * from Food_Collection_Sa23800182\n\nselect xDoc.query(\' \n					for $food in //food\n					let $name := $food/name\n					let $type := $food/@type\n					where $type = \"waffles\"\n					return data($name)\')\n\nfrom Food_Collection_Sa23800182\n\n\n-- Activity04--\nselect xDoc.query(\' \n					for $food in //food\n					let $name := $food/name\n					let $type := $food/@type\n					where $type = \"Toast\"\n					return data($name)\')\n\nfrom Food_Collection_Sa23800182\n\n\n\n-- Activity 05--\nselect xDoc.query(\' \n					for $food in //food\n					let $name := $food/name\n					let $price := $food/price\n                    where $price>60 and price<100 					\n					return data($name)\')\n\nfrom Food_Collection_Sa23800182\n\n-- without using variables --\n\nselect xDoc.query(\' \n					for $food in //food\n                    where $food/price>60 and $food/price<100 					\n					return data($food/price)\')\n\nfrom Food_Collection_Sa23800182\n\n-- Activity 06--\n\nselect xDoc.query(\' \n					for $food in //food\n                    where $food/price>80 					\n					return data($food/price)\')\n\nfrom Food_Collection_Sa23800182\n\n-- Activity 07--\nselect xDoc.query(\' \n					for $food in //food\n					let $name := $food/name\n					let $type := $food/@type\n					let $price := $food/price\n					let $calory := $food/calories\n                    where $type = \"waffles\" and price<80 and $calory>700		\n					return data($name)\')\n\nfrom Food_Collection_Sa23800182\n\n--Activity 08--\n\nselect xDoc.query(\' for $food in //food\n					let $type := $food/@type\n			        let $price := $food/price\n					where $type = \"Toast\"\n					return data($price)\')\n					\nfrom Food_Collection_Sa23800182\n\n\n--Activity 09--\n\nselect xDoc.query(\' for $food in //food\n					let $name := $food/name\n					let $type := $food/@type\n			        let $calory := $food/calory\n					where $type = \"Quesadillas\" and $calory >500\n					return data($name)\')\n					\nfrom Food_Collection_Sa23800182\n\n--Activity 10--\n\nselect xDoc.query(\' for $food in //food\n					let $name := $food/name\n			        let $calory := $food/calories\n					where $name = \"Berry-Berry Belgian Waffles\"\n					return data($calory)\')\n					\nfrom Food_Collection_Sa23800182\n\n\n--Activity 11--\n\nselect xDoc.query(\' for $type in distinct-values(//food/@type)\n					return data ($type)\')\n					\nfrom Food_Collection_Sa23800182\n\n\n--Activity 12--\n\nselect xDoc.query(\' for $avgprice in avg (//food/@avgprice)\n					return data ($avgprice)\')\n					\nfrom Food_Collection_Sa23800182\n\n--Activity 13--\n\nselect xDoc.query(\' for $count in count (//food/@type)\n					return $count\')\n					\nfrom Food_Collection_Sa23800182\n\n\n--Activity 14--\n\nselect xDoc.query(\' for $total in sum (//food/@calory)\n					return $total\')\n					\nfrom Food_Collection_Sa23800182\n\n\n--Activity 15--\n\nselect xDoc.query(\' for $total in sum (//food/@calory)\n					return $total\')\n					\nfrom Food_Collection_Sa23800182\n\n\n--Activity 16--\n\nselect xDoc.query(\' for $maxprice in max (//food/@price)\n					return $maxprice\')\n					\nfrom Food_Collection_Sa23800182\n\n--Activity 17--\n\nselect xDoc.query(\' for $food in //food\n					let $name := $food/name\n			        let $calory := $food/calories\n					let $avgcalory := avg(//food/calories)\n					where $calory>$avgcalory\n					return data($name)\')\n					\nfrom Food_Collection_Sa23800182\n\n\n--Activity 18--				\n\nselect xDoc.query(\' for $food in //food\n					where $food/price >80\n					return data($name)\')\n					\nfrom Food_Collection_Sa23800182\n\n ', '2025-07-23 09:55:52', '2025-07-23 09:55:52', 1),
('Amb', 'https://t.me/proxy?server=388.Ir.ir.ir.ir.ir.zban-mas.info&port=8888&secret=7gAA8A8Pd1VV____9QBuLmltZWRpYS5zdGVhbXBvd2VyZWQuY29t', '2025-06-22 09:10:13', '2025-06-22 09:10:13', 1),
('assst 1', '| **Field**                        | **Entry**                                                                |\n| -------------------------------- | ------------------------------------------------------------------------ |\n| **#**                            | 1                                                                        |\n| **Asset Title**                  | Central Web & Mail Server                                                |\n| **Asset ID**                     | INT-IT-001                                                               |\n| **Owner**                        | Chief IT Officer (CITO)                                                  |\n| **Custodian**                    | Senior Systems Administrator                                             |\n| **Users**                        | All Departments (company-wide)                                           |\n| **Location**                     | HQ – 3rd Floor Server Room                                               |\n| **Storage Details**              | 2 TB SSD RAID (Redundant storage, encrypted)                             |\n| **Classification**               | Critical Infrastructure Asset                                            |\n| **Life Cycle**                   | 60 months lifecycle; replaced in batches                                 |\n| **Disposal Method**              | Decommission via secure wipe + certificate of destruction (RHEL)         |\n| **Backup Schedule**              | Weekly Full (Sunday 2 AM), Daily Incrementals                            |\n| **Backup Location**              | Encrypted Vault (Local HQ Backup Server)                                 |\n| **Confidentiality Requirements** | **High (H)** – Stores sensitive client communications & email            |\n| **Integrity Requirements**       | **High (H)** – Must ensure authenticity of data, critical for operations |\n| **Availability Requirements**    | **High (H)** – Email/web access disruption impacts service delivery      |\n| **Value**                        | **5 (Very High Importance)**                                             |\n', '2025-06-19 08:28:52', '2025-06-19 08:28:52', 1),
('asst', 'Certainly! Below are **five simple scope statements** for an **Information Security Management System (ISMS)** tailored to **InteliSecure** based on the provided case study, along with explanations for each:\n\n---\n\n### **Scope 1: Service-Specific Scope (Focus on MSSP)**\n\n**Scope Statement**:\nThe ISMS applies to the **Managed Security Services (MSSP)** provided by InteliSecure, specifically the **Data Loss Prevention (DLP)** service and associated **incident response processes** for clients. This includes all technologies, staff, and security controls used to deliver secure DLP solutions and handle client data protection.\n\n**Explanation**:\nThis scope is focused on the core business offering of InteliSecure — **DLP services** to clients. It covers:\n\n* Technologies used for secure data management and DLP solutions.\n* Incident response procedures when a security breach occurs.\n* Relevant employees and security controls related to these services.\n\nThis does not cover **internal business operations** (e.g., HR, finance, marketing), which are considered outside the scope.\n\n---\n\n### **Scope 2: Departmental Scope (Focus on IT Department)**\n\n**Scope Statement**:\nThe ISMS applies to the **Information Technology (IT) Department** of InteliSecure, covering the **central server infrastructure**, **network security devices**, and **remote access systems**. This includes security measures related to maintaining servers (Red Hat Enterprise Linux), managing network firewalls, and providing secure remote access to internal and external staff.\n\n**Explanation**:\nThis scope limits the coverage to the **IT Department** responsible for managing and securing **company infrastructure**:\n\n* **Central Servers** (e.g., Red Hat Enterprise Linux) that store company data and client information.\n* **Network Security** (firewalls, intrusion detection) to protect internal systems.\n* **Remote Access** security for staff working off-site or accessing the systems remotely.\n\nNon-technical areas like **HR**, **marketing**, and **client operations** are excluded.\n\n---\n\n### **Scope 3: Full-Company Scope (Internal and External Operations)**\n\n**Scope Statement**:\nThe ISMS applies to **all departments** within InteliSecure, including **IT**, **HR**, **Finance**, **Marketing**, and **Managed Security Services**. This includes all internal information, systems, and processes related to data handling, employee management, client data protection, and business operations across all locations.\n\n**Explanation**:\nThis scope covers a **broad ISMS implementation**:\n\n* **All departments** (HR, IT, finance, marketing) are included.\n* Both **internal processes** (HR policies, employee data) and **client-facing services** (MSSP, data protection services) are addressed.\n* Protects **all information**, **digital assets**, and **physical security measures** in the company.\n\nThis scope is **comprehensive** but could be more resource-intensive to implement due to the larger coverage.\n\n---\n\n### **Scope 4: Regional Scope (U.S. Operations)**\n\n**Scope Statement**:\nThe ISMS applies to InteliSecure’s operations in the **United States** only, covering the **Managed Security Services** (MSSP) provided to U.S.-based clients. This includes all related processes, infrastructure, and technologies used to secure client data, provide incident response, and ensure secure communication.\n\n**Explanation**:\nThis scope focuses solely on **InteliSecure\'s U.S.-based operations**, which involves:\n\n* Offering **MSSP services** to U.S. clients.\n* Securing U.S.-specific client data.\n* Complying with relevant U.S. regulations and security policies.\n\nIt **excludes international** operations, focusing only on U.S.-centric services and infrastructure.\n\n---\n\n### **Scope 5: Technology-Centric Scope**\n\n**Scope Statement**:\nThe ISMS applies to the **technology infrastructure** used to provide Managed Security Services (MSSP), including **network security** (firewalls, IDS/IPS systems), **centralized servers**, and **cloud-based platforms**. This scope focuses on the **data protection technologies**, **data encryption**, and **user access controls** used for securing client data and internal systems.\n\n**Explanation**:\nThis scope is specifically centered around **technology assets** and **security controls**:\n\n* Securing the **network infrastructure** (firewalls, intrusion detection systems).\n* Protecting **servers and cloud platforms** that hold sensitive client and business data.\n* Ensuring **access controls** and **data encryption** are in place for both internal and external systems.\n\nThis **focuses purely on the tech side**, leaving out other business aspects like HR, finance, and physical office security.\n\n---\n\n### **Summary of the Scopes**:\n\n1. **Service-Specific Scope (MSSP Focus)**: Covers only the **DLP service** and security incident response processes.\n2. **Departmental Scope (IT Department)**: Focuses on securing the **IT infrastructure**, servers, and network security for internal and external staff.\n3. **Full-Company Scope**: Encompasses all **departments** (HR, IT, finance, marketing) and operations across the company, providing a comprehensive ISMS.\n4. **Regional Scope (U.S. Operations)**: Limits ISMS to the **U.S.-based operations**, covering MSSP services and client data security in the U.S. only.\n5. **Technology-Centric Scope**: Focuses on securing the **technology infrastructure** and data protection technologies (e.g., firewalls, servers, cloud platforms).\n\nEach of these scopes reflects different priorities, depending on the needs of InteliSecure. You could choose a narrow scope for simplicity or a broad one for comprehensive coverage, depending on resource availability, cost, and business priorities.\n', '2025-06-19 09:03:58', '2025-06-19 09:03:58', 1),
('background code ', '<body style=\"background: url(\'backgrond_pic.jpg\') no-repeat center center fixed; background-size: cover;\">', '2025-06-07 05:31:28', '2025-06-07 05:31:28', 1),
('business db ', '| Field                                   | Entry                                                                  |\n| --------------------------------------- | ---------------------------------------------------------------------- |\n| **#**                                   | 1                                                                      |\n| **Business Database Title**             | Client DLP Data Repository                                             |\n| **Asset ID**                            | DB-INT-DLP-001                                                         |\n| **Owner**                               | Director – Managed Security Services (MSSP)                            |\n| **Custodian**                           | Senior Database Administrator (DBA)                                    |\n| **Users**                               | InfoSec Analysts, Engineers, Team Leads                                |\n| **Location**                            | Central Server (3rd Floor HQ), with cloud backup (AWS GovCloud)        |\n| **Sys Admin**                           | DBA Team, under IT Infrastructure                                      |\n| **Life Cycle**                          | 5 Years                                                                |\n| **Application / Business Requirements** | Secure storage of client project data, logs, and DLP configurations    |\n| **Specific Requirements**               | Encrypted at rest & transit, role-based access, audit logs             |\n| **Technical Contact \\[SA/NA/DBA]**      | [dba-support@intelisecure.com](mailto:dba-support@intelisecure.com)    |\n| **Vendor**                              | PostgreSQL + AWS RDS                                                   |\n| **Expected Life**                       | 60 Months                                                              |\n| **Expired Life**                        | N/A (Currently active, new deployment in 2023)                         |\n| **Maintenance Status**                  | Active – Patch managed and monitored                                   |\n| **Purpose / Service / Role**            | Stores client-specific DLP configurations, alerts, and compliance logs |\n| **Dependency**                          | Web/Mail Server, Authentication Server                                 |\n| **Backup Schedule**                     | Daily Incremental, Weekly Full                                         |\n| **Backup Location**                     | AWS S3 (Encrypted), On-site Backup Appliance                           |\n| **Confidentiality Requirements**        | **High (H)** – Contains sensitive customer IP/data                     |\n| **Integrity Requirements**              | **High (H)** – Required for compliance and audit                       |\n| **Availability Requirements**           | **Medium (M)** – Accessed primarily during active investigations       |\n| **Value**                               | **5 (Very High Importance)**                                           |\n', '2025-06-19 08:32:33', '2025-06-19 08:32:33', 1),
('chami2005', '-- activity 01--\n\ncreate table Food_Collection_Sa23268326 (\nid int primary key,\nxDoc xml not null\n)\n\nselect * from Food_Collection_Sa23268326 \n\n \n -- Activity 02-- \n\ninsert into Food_Collection_Sa23268326 values\n\n(1,\'<breakfast_menu>\n<food type=\"Waffles\">\n<name> Belgian Waffles</name>\n<price>60</price>\n<description>Two of our famous Belgian Waffles with plenty of real maple syrup</description>\n<calories>650</calories>\n</food>\n<food type=\"Waffles\">\n<name>Strawberry Belgian Waffles</name>\n<price>75</price>\n<description>Light Belgian waffles covered with strawberries and whipped cream</description>\n<calories>900</calories>\n</food>\n<food type=\"Waffles\">\n<name>Berry-Berry Belgian Waffles</name>\n<price>80</price>\n<description>Light Belgian waffles covered with an assortment of fresh berries and whipped cream</description>\n<calories>900</calories>\n</food>\n<food type=\"Toast\">\n<name>French Toast</name>\n<price>45</price>\n<description>Thick slices made from our homemade sourdough bread</description>\n<calories>600</calories>\n</food>\n<food type=\"Toast\">\n<name>Homestyle Breakfast</name>\n<price>70</price>\n<description>Two eggs, bacon or sausage, toast, and our ever-popular hash browns</description>\n<calories>950</calories>\n</food>\n<food type=\"Quesadillas\">\n<name>BBQ Chicken</name>\n<price>100</price>\n<description>Chicken, tortillas, BBQ Sauce, Cheese</description>\n<calories>1250</calories>\n</food>\n<food type=\"Quesadillas\">\n<name>Spinach and Mushroom</name>\n<price>100</price>\n<description>Spinach, Mushroom, tortillas, Cheese, Garlic</description>\n<calories>950</calories>\n</food>\n</breakfast_menu>\')\n\n-- Activity 02 (get all food item names)\nselect xDoc.query(\' \n					for $food in //food\n					let $name := $food/name\n					return data($name)\')\n\nfrom Food_Collection_Sa23268326\n\n\n\n-- Activity03--\n\nselect * from Food_Collection_Sa23268326 \n\nselect xDoc.query(\' \n					for $food in //food\n					let $name := $food/name\n					let $type := $food/@type\n					where $type = \"waffles\"\n					return data($name)\')\n\nfrom Food_Collection_Sa23268326\n\n\n-- Activity04--\nselect xDoc.query(\' \n					for $food in //food\n					let $name := $food/name\n					let $type := $food/@type\n					where $type = \"Toast\"\n					return data($name)\')\n\nfrom Food_Collection_Sa23268326\n\n\n\n-- Activity 05--\nselect xDoc.query(\' \n					for $food in //food\n					let $name := $food/name\n					let $price := $food/price\n                    where $price>60 and price<100 					\n					return data($name)\')\n\nfrom Food_Collection_Sa23268326\n\n-- without using variables --\n\nselect xDoc.query(\' \n					for $food in //food\n                    where $food/price>60 and $food/price<100 					\n					return data($food/price)\')\n\nfrom Food_Collection_Sa23268326\n\n-- Activity 06--\n\nselect xDoc.query(\' \n					for $food in //food\n                    where $food/price>80 					\n					return data($food/price)\')\n\nfrom Food_Collection_Sa23268326\n\n-- Activity 07--\nselect xDoc.query(\' \n					for $food in //food\n					let $name := $food/name\n					let $type := $food/@type\n					let $price := $food/price\n					let $calory := $food/calories\n                    where $type = \"waffles\" and price<80 and $calory>700		\n					return data($name)\')\n\nfrom Food_Collection_Sa23268326\n\n--Activity 08--\n\nselect xDoc.query(\' for $food in //food\n					let $type := $food/@type\n			        let $price := $food/price\n					where $type = \"Toast\"\n					return data($price)\')\n					\nfrom Food_Collection_Sa23268326\n\n\n					\n\n\n ', '2025-07-23 09:03:51', '2025-07-23 09:03:51', 1),
('d', '#include <stdio.h>\n\nint main() {\n    int n, i;\n    printf(\"Enter number of elements: \");\n    scanf(\"%d\", &n);\n    int arr1[n], arr2[n], sumArr[n];\n    printf(\"Enter %d elements for first array:\\n\", n);\n    for(i = 0; i < n; i++) scanf(\"%d\", &arr1[i]);\n    printf(\"Enter %d elements for second array:\\n\", n);\n    for(i = 0; i < n; i++) scanf(\"%d\", &arr2[i]);\n    for(i = 0; i < n; i++) sumArr[i] = arr1[i] + arr2[i];\n    printf(\"Summed array elements:\\n\");\n    for(i = 0; i < n; i++) printf(\"%d \", sumArr[i]);\n    printf(\"\\n\");\n    return 0;\n}', '2025-06-23 09:37:36', '2025-06-23 09:37:36', 1),
('ddd', '| **#** | **Asset Title**                  | **Asset Details**                                                         | **Value** |\n| ----- | -------------------------------- | ------------------------------------------------------------------------- | --------- |\n| 1     | **Asset ID**                     | HR-NA-001                                                                 | 3         |\n|       | **Owner**                        | HR Department (Headed by HR Manager)                                      |           |\n|       | **Custodian**                    | HR Staff / HR Management Team                                             |           |\n|       | **Users**                        | HR staff, IT, Finance, Marketing, Employees (General)                     |           |\n|       | **Location**                     | HR Office (4th Floor)                                                     |           |\n|       | **Storage Details**              | Physical files (Employee records, Recruitment documentation, Contracts)   |           |\n|       | **Classification**               | Critical HR Assets (Employee Data, Legal Contracts)                       |           |\n|       | **Life Cycle**                   | Ongoing (Records kept for 7 years after employment ends)                  |           |\n|       | **Disposal Method**              | Secure shredding or off-site document destruction service                 |           |\n|       | **Backup**                       | Backup files maintained via secure physical storage or cloud-based backup |           |\n|       | **Backup Location**              | HR Department’s file storage room / Secure Cloud Service                  |           |\n|       | **Confidentiality Requirements** | High (Sensitive Employee Information)                                     | L         |\n|       | **Integrity Requirements**       | High (Ensuring accuracy and authenticity of employee records)             | L         |\n|       | **Availability Requirements**    | Medium (Access to files required during work hours, backup maintained)    | L         |\n', '2025-06-19 09:32:26', '2025-06-19 09:32:26', 1),
('ds lab 1233', '---activity 01\nCREATE TABLE Food_Collection (\n    id INT,\n    xDoc XML\n);\n\n\n\n\n-- Activity 02: Insert XML data manually\nDECLARE @xml XML;\n\n-- Correctly assign the XML string\nSET @xml = N\'\n<breakfast_menu>\n  <food type=\"Waffles\">\n    <name>Belgian Waffles</name>\n    <price>60</price>\n    <description>Two of our famous Belgian Waffles with plenty of real maple syrup</description>\n    <calories>650</calories>\n  </food>\n  <food type=\"Waffles\">\n    <name>Strawberry Belgian Waffles</name>\n    <price>75</price>\n    <description>Light Belgian waffles covered with strawberries and whipped cream</description>\n    <calories>900</calories>\n  </food>\n  <food type=\"Waffles\">\n    <name>Berry-Berry Belgian Waffles</name>\n    <price>80</price>\n    <description>Light Belgian waffles covered with an assortment of fresh berries and whipped cream</description>\n    <calories>900</calories>\n  </food>\n  <food type=\"Toast\">\n    <name>French Toast</name>\n    <price>45</price>\n    <description>Thick slices made from our homemade sourdough bread</description>\n    <calories>600</calories>\n  </food>\n  <food type=\"Toast\">\n    <name>Homestyle Breakfast</name>\n    <price>70</price>\n    <description>Two eggs, bacon or sausage, toast, and our ever-popular hash browns</description>\n    <calories>950</calories>\n  </food>\n  <food type=\"Quesadillas\">\n    <name>BBQ Chicken</name>\n    <price>100</price>\n    <description>Chicken, tortillas, BBQ Sauce, Cheese</description>\n    <calories>1250</calories>\n  </food>\n  <food type=\"Quesadillas\">\n    <name>Spinach and Mushroom</name>\n    <price>100</price>\n    <description>Spinach, Mushroom, tortillas, Cheese, Garlic</description>\n    <calories>950</calories>\n  </food>\n</breakfast_menu>\';\n\n-- Insert into the table\nINSERT INTO Food_Collection (id, xDoc)\nVALUES (1, @xml);\n\n\n\nCREATE TABLE AdminDocs_Tab_7513 ( \nid int primary key, \nxDoc Xml not null \n) \n\nCREATE TABLE Book_Collection_7513 (\n    id INT,\n    xDoc XML\n);\n\nDECLARE @xml XML;\n\nSET @xml = N\'\n<bookstore>\n  <book category=\"COOKING\">\n    <title lang=\"en\">Everyday Italian</title>\n    <author>Giada De Laurentiis</author>\n    <year>2006</year>\n    <price>35.00</price>\n  </book>\n  <book category=\"CHILDREN\">\n    <title lang=\"en\">Harry Potter</title>\n    <author>J K. Rowling</author>\n    <year>2004</year>\n    <price>29.99</price>\n  </book>\n  <book category=\"WEB\">\n    <title lang=\"en\">XQuery Kick Start</title>\n    <author>James McGovern</author>\n    <author>Per Bothner</author>\n    <author>Kurt Cagle</author>\n    <author>James Linn</author>\n    <author>Vaidyanathan Nagarajan</author>\n    <year>2003</year>\n    <price>49.99</price>\n  </book>\n  <book category=\"WEB\">\n    <title lang=\"en\">Learning XML</title>\n    <author>Erik T. Ray</author>\n    <year>2003</year>\n    <price>39.95</price>\n  </book>\n</bookstore>\';  -- ✅ Semicolon outside the string\n\nINSERT INTO Book_Collection_7513 (id, xDoc)\nVALUES (1, @xml);\n\n\nselect * from Book_Collection_7513\n', '2025-07-09 08:41:57', '2025-07-09 08:41:57', 1),
('ds lab 90', 'INSERT INTO Food_Collection_7513(id, xDoc)\nVALUES \n(\n    1,\n    CAST(\n    \'<breakfast_menu>\n<food type=\"Waffles\">\n<name> Belgian Waffles</name>\n<price>60</price>\n<description>Two of our famous Belgian Waffles with plenty of real maple syrup</description>\n<calories>650</calories>\n</food>\n<food type=\"Waffles\">\n<name>Strawberry Belgian Waffles</name>\n<price>75</price>\n<description>Light Belgian waffles covered with strawberries and whipped cream</description>\n<calories>900</calories>\n</food>\n<food type=\"Waffles\">\n<name>Berry-Berry Belgian Waffles</name>\n<price>80</price>\n<description>Light Belgian waffles covered with an assortment of fresh berries and whipped cream</description>\n<calories>900</calories>\n</food>\n<food type=\"Toast\">\n<name>French Toast</name>\n<price>45</price>\n<description>Thick slices made from our homemade sourdough bread</description>\n<calories>600</calories>\n</food>\n<food type=\"Toast\">\n<name>Homestyle Breakfast</name>\n<price>70</price>\n<description>Two eggs, bacon or sausage, toast, and our ever-popular hash browns</description>\n<calories>950</calories>\n</food>\n<food type=\"Quesadillas\">\n<name>BBQ Chicken</name>\n<price>100</price>\n<description>Chicken, tortillas, BBQ Sauce, Cheese</description>\n<calories>1250</calories>\n</food>\n<food type=\"Quesadillas\">\n<name>Spinach and Mushroom</name>\n<price>100</price>\n<description>Spinach, Mushroom, tortillas, Cheese, Garlic</description>\n<calories>950</calories>\n</food>\n</breakfast_menu>\' AS XML)\n);', '2025-07-23 08:40:43', '2025-07-23 08:40:43', 1),
('ds user details ', '\nusername : dsjune2025\npassword: dsjune@2025\nIP addr : 172.18.96.14', '2025-06-04 08:13:52', '2025-06-04 08:13:52', 1),
('empActvity', 'package com.example.hire_me_test;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.widget.Button;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class EmpProfileActivity extends AppCompatActivity {\n\n    TextView textViewWelcome, textViewJobTitle, textViewId;\n    Button btnFindJobs, btnMyVault, btnMyReviews, btnViewProfile, btnEditJobs, btnJobHistory, btnLogout, btnOrderFood;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_emp_profile);\n\n        // Get data from intent\n        Intent intent = getIntent();\n        String fullName = intent.getStringExtra(\"full_name\");\n        String jobTitle = intent.getStringExtra(\"job_title\");\n        String idNumber = intent.getStringExtra(\"id_number\");\n\n        // Bind views\n        textViewWelcome = findViewById(R.id.textViewWelcome);\n        textViewJobTitle = findViewById(R.id.textViewJobTitle);\n        textViewId = findViewById(R.id.textViewIdNumber);\n\n        btnFindJobs = findViewById(R.id.btnFindJobs);\n        btnMyVault = findViewById(R.id.btnMyVault);\n        btnMyReviews = findViewById(R.id.btnMyReviews);\n        btnViewProfile = findViewById(R.id.btnViewProfile);\n        btnEditJobs = findViewById(R.id.btnEditJobs);\n        btnJobHistory = findViewById(R.id.btnJobHistory);\n        btnLogout = findViewById(R.id.btnLogout);\n        btnOrderFood = findViewById(R.id.btnOrderFood); // New button\n\n        // Display passed user info\n        textViewWelcome.setText(\"👋 Welcome, \" + fullName);\n        textViewJobTitle.setText(\"🧑‍💼 Job Title: \" + jobTitle);\n        textViewId.setText(\"🆔 ID: \" + idNumber);\n\n        // Handle button clicks\n        btnFindJobs.setOnClickListener(v -> {\n            Intent intentFindJobs = new Intent(EmpProfileActivity.this, JobListActivity.class);\n            intentFindJobs.putExtra(\"id_number\", idNumber);\n            startActivity(intentFindJobs);\n        });\n\n        btnMyVault.setOnClickListener(v -> {\n            // Go to My Vault screen\n        });\n\n        btnMyReviews.setOnClickListener(v -> {\n            Intent intentReview = new Intent(EmpProfileActivity.this, WorkerReviewActivity.class);\n            intentReview.putExtra(\"id_number\", idNumber);\n            startActivity(intentReview);\n        });\n\n        btnViewProfile.setOnClickListener(v -> {\n            Intent intentView = new Intent(EmpProfileActivity.this, ViewProfileActivity.class);\n            intentView.putExtra(\"id_number\", idNumber);\n            startActivity(intentView);\n        });\n\n        btnEditJobs.setOnClickListener(v -> {\n            // Go to Edit Jobs screen\n        });\n\n        btnJobHistory.setOnClickListener(v -> {\n            // Go to Job History screen\n        });\n\n        btnOrderFood.setOnClickListener(v -> {\n            // Navigate to order food screen\n            Intent intentOrder = new Intent(EmpProfileActivity.this, OrderFoodActivity.class);\n            intentOrder.putExtra(\"id_number\", idNumber); // Optional\n            startActivity(intentOrder);\n        });\n\n        btnLogout.setOnClickListener(v -> {\n            startActivity(new Intent(EmpProfileActivity.this, FindJobActivity.class));\n            finish();\n        });\n    }\n}\n', '2025-07-30 09:49:57', '2025-07-30 09:49:57', 1);
INSERT INTO `user_texts` (`username`, `text`, `saved_at`, `created_at`, `is_protected`) VALUES
('empProfi', '<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:padding=\"20dp\"\n    android:background=\"#FAFAFA\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\"\n        android:gravity=\"center_horizontal\"\n        android:paddingBottom=\"24dp\">\n\n        <!-- Profile Header -->\n        <TextView\n            android:id=\"@+id/textViewWelcome\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Welcome, User\"\n            android:textSize=\"26sp\"\n            android:textStyle=\"bold\"\n            android:textColor=\"#222222\"\n            android:layout_marginTop=\"24dp\" />\n\n        <TextView\n            android:id=\"@+id/textViewJobTitle\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Job Title\"\n            android:textSize=\"18sp\"\n            android:textColor=\"#666666\"\n            android:layout_marginTop=\"4dp\" />\n\n        <TextView\n            android:id=\"@+id/textViewIdNumber\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"ID Number\"\n            android:textSize=\"16sp\"\n            android:textColor=\"#888888\"\n            android:layout_marginBottom=\"20dp\" />\n\n        <!-- Buttons Section -->\n        <View android:layout_height=\"1dp\" android:layout_width=\"match_parent\" android:background=\"#DDDDDD\" />\n\n        <Button\n            android:id=\"@+id/btnFindJobs\"\n            style=\"@style/Widget.MaterialComponents.Button.OutlinedButton\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"🔍 Find New Jobs\"\n            android:layout_marginTop=\"16dp\"\n            android:backgroundTint=\"#FFDD00\"\n            android:textColor=\"#000000\" />\n\n        <Button\n            android:id=\"@+id/btnMyVault\"\n            style=\"@style/Widget.MaterialComponents.Button.OutlinedButton\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"💼 My Vault\"\n            android:layout_marginTop=\"12dp\" />\n\n        <Button\n            android:id=\"@+id/btnMyReviews\"\n            style=\"@style/Widget.MaterialComponents.Button.OutlinedButton\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"⭐ My Reviews and Ratings\"\n            android:layout_marginTop=\"12dp\" />\n\n        <Button\n            android:id=\"@+id/btnViewProfile\"\n            style=\"@style/Widget.MaterialComponents.Button.OutlinedButton\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"👤 View Profile\"\n            android:layout_marginTop=\"12dp\" />\n\n        <Button\n            android:id=\"@+id/btnEditJobs\"\n            style=\"@style/Widget.MaterialComponents.Button.OutlinedButton\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"✏️ Edit My Jobs\"\n            android:layout_marginTop=\"12dp\" />\n\n        <Button\n            android:id=\"@+id/btnJobHistory\"\n            style=\"@style/Widget.MaterialComponents.Button.OutlinedButton\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"📄 Job History\"\n            android:layout_marginTop=\"12dp\" />\n\n        <!-- New Order Food Button -->\n        <Button\n            android:id=\"@+id/btnOrderFood\"\n            style=\"@style/Widget.MaterialComponents.Button.OutlinedButton\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"🍽️ Order Food\"\n            android:backgroundTint=\"#A5D6A7\"\n            android:textColor=\"#000\"\n            android:layout_marginTop=\"12dp\" />\n\n        <Button\n            android:id=\"@+id/btnLogout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"🚪 Logout\"\n            android:layout_marginTop=\"24dp\"\n            android:layout_marginBottom=\"24dp\"\n            android:backgroundTint=\"#E53935\"\n            android:textColor=\"#FFFFFF\"\n            android:elevation=\"4dp\" />\n    </LinearLayout>\n</ScrollView>\n', '2025-07-30 09:50:23', '2025-07-30 09:50:23', 1),
('mainctivty_app_hireus', '<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/Background_47\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/main\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        android:padding=\"16dp\">\r\n\r\n        <!-- Welcome Header -->\r\n        <TextView\r\n            android:id=\"@+id/welcomeText\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/welcome\"\r\n            android:textColor=\"@color/onSurface_47\"\r\n            android:textSize=\"36sp\"\r\n            android:textStyle=\"bold\"\r\n            android:layout_gravity=\"center_horizontal\"\r\n            android:fontFamily=\"sans-serif-medium\"\r\n            android:letterSpacing=\"0.02\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/hireMeText\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/hire_us_system\"\r\n            android:textColor=\"@color/primary_47\"\r\n            android:textSize=\"28sp\"\r\n            android:textStyle=\"italic\"\r\n            android:layout_gravity=\"center_horizontal\"\r\n            android:layout_marginBottom=\"24dp\"\r\n            android:fontFamily=\"sans-serif-medium\"\r\n            android:letterSpacing=\"0.01\" />\r\n\r\n        <!-- Find a Job Card -->\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:id=\"@+id/findJobLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\"\r\n            android:layout_marginBottom=\"20dp\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:clickable=\"true\"\r\n            android:focusable=\"true\"\r\n            android:foreground=\"?attr/selectableItemBackground\"\r\n            app:cardCornerRadius=\"20dp\"\r\n            app:cardElevation=\"8dp\"\r\n            app:cardBackgroundColor=\"@color/surface_47\"\r\n            app:strokeColor=\"@color/outline_47\"\r\n            app:strokeWidth=\"1dp\"\r\n            app:rippleColor=\"@color/ripple_on_surface_47\">\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:padding=\"16dp\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/findJobText\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"@string/find_a_job\"\r\n                    android:textSize=\"20sp\"\r\n                    android:textStyle=\"bold\"\r\n                    android:textColor=\"@color/onSurface_47\"\r\n                    android:fontFamily=\"sans-serif-medium\"\r\n                    android:letterSpacing=\"0.01\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintEnd_toStartOf=\"@+id/findJobImage\"\r\n                    app:layout_constraintVertical_bias=\"0.5\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/findJobImage\"\r\n                    android:layout_width=\"80dp\"\r\n                    android:layout_height=\"80dp\"\r\n                    android:src=\"@drawable/job_find\"\r\n                    android:contentDescription=\"@string/find_job\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"/>\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n        <!-- Give a Job Card -->\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:id=\"@+id/giveJobLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\"\r\n            android:layout_marginBottom=\"20dp\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:clickable=\"true\"\r\n            android:focusable=\"true\"\r\n            android:foreground=\"?attr/selectableItemBackground\"\r\n            app:cardCornerRadius=\"20dp\"\r\n            app:cardElevation=\"8dp\"\r\n            app:cardBackgroundColor=\"@color/surface_47\"\r\n            app:strokeColor=\"@color/outline_47\"\r\n            app:strokeWidth=\"1dp\"\r\n            app:rippleColor=\"@color/ripple_on_surface_47\">\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:padding=\"16dp\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/giveJobText\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"@string/give_a_job\"\r\n                    android:textSize=\"20sp\"\r\n                    android:textStyle=\"bold\"\r\n                    android:textColor=\"@color/onSurface_47\"\r\n                    android:fontFamily=\"sans-serif-medium\"\r\n                    android:letterSpacing=\"0.01\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintEnd_toStartOf=\"@+id/giveJobImage\"\r\n                    app:layout_constraintVertical_bias=\"0.5\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/giveJobImage\"\r\n                    android:layout_width=\"80dp\"\r\n                    android:layout_height=\"80dp\"\r\n                    android:src=\"@drawable/job\"\r\n                    android:contentDescription=\"@string/give_job\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"/>\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n        <!-- Chat with Admin Card -->\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:id=\"@+id/chatLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"150dp\"\r\n            android:layout_marginBottom=\"20dp\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:clickable=\"true\"\r\n            android:focusable=\"true\"\r\n            android:foreground=\"?attr/selectableItemBackground\"\r\n            app:cardCornerRadius=\"20dp\"\r\n            app:cardElevation=\"8dp\"\r\n            app:cardBackgroundColor=\"@color/surface_47\"\r\n            app:strokeColor=\"@color/outline_47\"\r\n            app:strokeWidth=\"1dp\"\r\n            app:rippleColor=\"@color/ripple_on_surface_47\">\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:padding=\"16dp\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/chatText\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"@string/chat_with_admin\"\r\n                    android:textSize=\"20sp\"\r\n                    android:textStyle=\"bold\"\r\n                    android:textColor=\"@color/onSurface_47\"\r\n                    android:fontFamily=\"sans-serif-medium\"\r\n                    android:letterSpacing=\"0.01\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintEnd_toStartOf=\"@+id/chatImage\"\r\n                    app:layout_constraintVertical_bias=\"0.5\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/chatImage\"\r\n                    android:layout_width=\"80dp\"\r\n                    android:layout_height=\"80dp\"\r\n                    android:src=\"@drawable/ic_chat\"\r\n                    android:contentDescription=\"@string/chat\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"/>\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n    </LinearLayout>\r\n</ScrollView>', '2025-08-22 10:23:24', '2025-08-22 10:23:24', 0),
('orderACTIVTYXML', '<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/scrollView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#FFFFFF\"\n    android:padding=\"16dp\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\"\n        android:gravity=\"center_horizontal\">\n\n        <TextView\n            android:id=\"@+id/txtMealInfo\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Checking available meals...\"\n            android:textColor=\"#000000\"\n            android:textSize=\"16sp\"\n            android:padding=\"8dp\"\n            android:background=\"#EEEEEE\"\n            android:layout_marginBottom=\"20dp\" />\n\n        <Button\n            android:id=\"@+id/btnYesMeal\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Yes, I want meals\"\n            android:backgroundTint=\"#4CAF50\"\n            android:textColor=\"#FFFFFF\"\n            android:visibility=\"gone\"\n            android:layout_marginBottom=\"10dp\" />\n\n        <Button\n            android:id=\"@+id/btnNoMeal\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"No, I don\'t want meals\"\n            android:backgroundTint=\"#F44336\"\n            android:textColor=\"#FFFFFF\"\n            android:visibility=\"gone\" />\n\n    </LinearLayout>\n</ScrollView>\n', '2025-07-30 09:44:02', '2025-07-30 09:44:02', 1),
('OrderFoodActivity', 'package com.example.hire_me_test;\n\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport com.android.volley.Request;\nimport com.android.volley.toolbox.StringRequest;\nimport com.android.volley.toolbox.Volley;\n\nimport org.json.JSONArray;\nimport org.json.JSONObject;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class OrderFoodActivity extends AppCompatActivity {\n\n    private static final String TAG = \"OrderFoodActivity\";\n\n    private String idNumber, jobId;\n    private TextView txtMealInfo;\n    private Button btnYesMeal, btnNoMeal;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_order_food);\n\n        txtMealInfo = findViewById(R.id.txtMealInfo);\n        btnYesMeal = findViewById(R.id.btnYesMeal);\n        btnNoMeal = findViewById(R.id.btnNoMeal);\n\n        // Hide buttons initially\n        btnYesMeal.setVisibility(View.GONE);\n        btnNoMeal.setVisibility(View.GONE);\n\n        // Retrieve ID from intent\n        idNumber = getIntent().getStringExtra(\"idNumber\");\n        if (idNumber == null) {\n            idNumber = getIntent().getStringExtra(\"id_number\");\n        }\n\n        if (idNumber == null || idNumber.trim().isEmpty()) {\n            Toast.makeText(this, \"❌ Worker ID not provided!\", Toast.LENGTH_LONG).show();\n            finish();\n            return;\n        }\n\n        Log.d(TAG, \"Received idNumber: \" + idNumber);\n        checkIfHired();\n    }\n\n    private void checkIfHired() {\n        String url = \"https://hireme.cpsharetxt.com/check_worker_hired.php?id_number=\" + idNumber;\n\n        StringRequest request = new StringRequest(Request.Method.GET, url,\n                response -> {\n                    Log.d(TAG, \"checkIfHired response: \" + response);\n                    try {\n                        JSONObject obj = new JSONObject(response);\n                        boolean exists = obj.optBoolean(\"exists\", false);\n\n                        if (!exists) {\n                            txtMealInfo.setText(\"❌ Worker not found.\");\n                            return;\n                        }\n\n                        if (obj.optBoolean(\"hired\", false)) {\n                            jobId = obj.optString(\"job_id\", \"\");\n                            Log.d(TAG, \"Worker is hired for job ID: \" + jobId);\n                            fetchMeals(jobId);\n                        } else {\n                            txtMealInfo.setText(\"❌ You are not hired for any job yet.\");\n                        }\n\n                    } catch (Exception e) {\n                        Log.e(TAG, \"JSON parsing error in checkIfHired()\", e);\n                        txtMealInfo.setText(\"❗ Error parsing server response.\");\n                    }\n                },\n                error -> {\n                    Log.e(TAG, \"Network error in checkIfHired()\", error);\n                    txtMealInfo.setText(\"⚠️ Network error. Please check your connection.\");\n                });\n\n        Volley.newRequestQueue(this).add(request);\n    }\n\n    private void fetchMeals(String jobId) {\n        String url = \"https://hireme.cpsharetxt.com/meals.php?job_id=\" + jobId;\n\n        StringRequest request = new StringRequest(Request.Method.GET, url,\n                response -> {\n                    Log.d(TAG, \"fetchMeals response: \" + response);\n                    try {\n                        JSONObject obj = new JSONObject(response);\n                        boolean success = obj.optBoolean(\"success\", false);\n                        JSONArray meals = obj.optJSONArray(\"meals\");\n\n                        if (success && meals != null && meals.length() > 0) {\n                            StringBuilder mealDetails = new StringBuilder(\"🍱 Meals available:\\n\\n\");\n                            for (int i = 0; i < meals.length(); i++) {\n                                JSONObject meal = meals.getJSONObject(i);\n                                String name = meal.optString(\"meal_name\", \"Unnamed Meal\");\n                                String desc = meal.optString(\"description\", \"No description\");\n                                String price = meal.optString(\"meal_price\", \"0.00\");\n\n                                mealDetails.append(\"🍽️ \").append(name)\n                                        .append(\"\\n📋 \").append(desc)\n                                        .append(\"\\n💰 Rs. \").append(price)\n                                        .append(\"\\n\\n\");\n                            }\n\n                            txtMealInfo.setText(mealDetails.toString().trim());\n                            btnYesMeal.setVisibility(View.VISIBLE);\n                            btnNoMeal.setVisibility(View.VISIBLE);\n\n                            btnYesMeal.setOnClickListener(v -> updateMealPreference(\"yes\"));\n                            btnNoMeal.setOnClickListener(v -> updateMealPreference(\"no\"));\n                        } else {\n                            txtMealInfo.setText(\"🚫 No meals available for your job.\");\n                        }\n                    } catch (Exception e) {\n                        Log.e(TAG, \"Error parsing meals response\", e);\n                        txtMealInfo.setText(\"❗ Failed to read meal data.\");\n                    }\n                },\n                error -> {\n                    Log.e(TAG, \"Network error in fetchMeals()\", error);\n                    txtMealInfo.setText(\"⚠️ Could not fetch meals. Try again later.\");\n                });\n\n        Volley.newRequestQueue(this).add(request);\n    }\n\n\n\n    private void updateMealPreference(String choice) {\n        String url = \"https://hireme.cpsharetxt.com/update_meals_choice.php\";\n\n        StringRequest request = new StringRequest(Request.Method.POST, url,\n                response -> {\n                    Log.d(TAG, \"updateMealPreference response: \" + response);\n                    try {\n                        JSONObject obj = new JSONObject(response);\n                        if (obj.optBoolean(\"success\", false)) {\n                            Toast.makeText(this, \"✅ Your meal choice was saved!\", Toast.LENGTH_SHORT).show();\n                            finish();\n                        } else {\n                            Toast.makeText(this, \"❌ Failed to save meal choice.\", Toast.LENGTH_SHORT).show();\n                        }\n                    } catch (Exception e) {\n                        Log.e(TAG, \"Error parsing updateMealPreference response\", e);\n                        Toast.makeText(this, \"❗ Failed to process update.\", Toast.LENGTH_SHORT).show();\n                    }\n                },\n                error -> {\n                    Log.e(TAG, \"Network error in updateMealPreference()\", error);\n                    Toast.makeText(this, \"⚠️ Network error during update.\", Toast.LENGTH_SHORT).show();\n                }) {\n            @Override\n            protected Map<String, String> getParams() {\n                Map<String, String> map = new HashMap<>();\n                map.put(\"id_number\", idNumber);\n                map.put(\"job_id\", jobId);\n                map.put(\"wants_meals\", choice);\n                return map;\n            }\n        };\n\n        Volley.newRequestQueue(this).add(request);\n    }\n}\n', '2025-07-30 09:43:12', '2025-07-30 09:43:12', 1),
('Sa', '<html>\n\n<head>\n\n<tittle My self eftitla </fitk\n\n</head>\n\n<body bg color = \"sky Blue\">\n\n<center> <h1> <font peppercolor=\" light violet>\n\nHello I\'am Savinima! </center> </h1> </fond z (ola)\n\n<p> I\'m Savi\n\nP1> <font<font colour Light pink\"> <center>\n\nI am Savinima I\'m from fee Mecpe. I\'m\n\nStudy In spcc. 14m 16 years old </p>\n\n<font color> </center>\n\n</body>\n\n</html>', '2025-04-13 10:05:03', '2025-04-13 10:05:03', 1),
('SA23347458', 'Asset Title: IT Department Digital Assets\n2. Asset Details for IT Department:\nAsset ID: 001\n\nOwner: IT Department (Headed by Chief IT Officer)\n\nCustodian: IT staff/IT Management Team\n\nUsers: Employees across various departments\n\nLocation: Main office building (top three floors)\n\nStorage Details: Central server (Red Hat Enterprise Linux), Windows Server 2008 (Marketing), individual PCs/Laptops (Windows 11)\n\nClassification:\n\nCritical Asset: Client details and project data\n\nGeneral Asset: Server infrastructure and network devices\n\nLife Cycle: Equipment is replaced every 60 months.\n\nDisposal Method: Secure disposal of hardware (wiping hard drives, decommissioning servers).\n\nBackup Schedule: Weekly backups for servers.\n\nBackup Location: Backup server onsite.\n\n3. Confidentiality, Integrity, and Availability Requirements:\nConfidentiality: High (client data and project info are critical to maintain privacy).\n\nIntegrity: High (ensure data is not altered or tampered).\n\nAvailability: High (systems should be always available to ensure operations are not disrupted).\n\n', '2025-06-19 09:20:39', '2025-06-19 09:20:39', 1),
('sa23728158', 'Router>enable\nRouter#config t\nEnter configuration commands, one per line.  End with CNTL/Z.\nRouter(config)#hostname OfficeRouter\nOfficeRouter(config)#int\n% Incomplete command.\nOfficeRouter(config)#interface\n% Incomplete command.\nOfficeRouter(config)#interface fa0/0\nOfficeRouter(config-if)#no shutdown\n\nOfficeRouter(config-if)#\n%LINK-5-CHANGED: Interface FastEthernet0/0, changed state to up\n\n%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state to up\n\nOfficeRouter(config-if)#ip address 10.0.0.1 255.0.0.0\nOfficeRouter(config-if)#exit\nOfficeRouter(config)#int se0/0/0\nOfficeRouter(config-if)#no shutdown\n\n%LINK-5-CHANGED: Interface Serial0/0/0, changed state to down\nOfficeRouter(config-if)#ip address 202.100.10.1 255.255.255.252\nOfficeRouter(config-if)#exit\nOfficeRouter(config)#\nOfficeRouter#\n\nOfficeRouter#config t\nEnter configuration commands, one per line.  End with CNTL/Z.\nOfficeRouter(config)#ip nat inside source static 10.0.0.10 100.0.0.10\nOfficeRouter(config)#ip nat inside source static 10.0.0.20 100.0.0.20\nOfficeRouter(config)#ip nat inside source static 10.0.0.30 100.0.0.30\nOfficeRouter(config)#int fa0/0\nOfficeRouter(config-if)#ip nat inside\nOfficeRouter(config-if)#exit\nOfficeRouter(config)#int se0/0/0\nOfficeRouter(config-if)#ip nat outside\nOfficeRouter(config-if)#exit\nOfficeRouter(config)#exit\nOfficeRouter#\n%SYS-5-CONFIG_I: Configured from console by console\n\nOfficeRouter#show ip nat translation\nPro  Inside global     Inside local       Outside local      Outside global\n---  100.0.0.10        10.0.0.10          ---                ---\n---  100.0.0.20        10.0.0.20          ---                ---\n---  100.0.0.30        10.0.0.30          ---                ---\n\nOfficeRouter#\nOfficeRouter#config t\nEnter configuration commands, one per line.  End with CNTL/Z.\nOfficeRouter(config)#ip route 200.0.10.0 255.255.255.0 202.100.10.2\nOfficeRouter(config)#do wr\nBuilding configuration...\n[OK]\nOfficeRouter(config)#\n\n\n\n\nRouter>enable\nRouter#config t\nEnter configuration commands, one per line.  End with CNTL/Z.\nRouter(config)#hostname Cisco Router\n                              	\nRouter(config)#hostname CiscoRouter\nCiscoRouter(config)#int se0/0/1\nCiscoRouter(config-if)#no shutdown\n\nCiscoRouter(config-if)#\n%LINK-5-CHANGED: Interface Serial0/0/1, changed state to up\n\nCiscoRouter(config-if)#\n%LINEPROTO-5-UPDOWN: Line protocol on Interface Serial0/0/1, changed state to up\n\nCiscoRouter(config-if)#ip address 202.100.10.2 255.255.255.252\nCiscoRouter(config-if)#exit\nCiscoRouter(config)#int fa0/0\nCiscoRouter(config-if)#no shutdown\n\nCiscoRouter(config-if)#\n%LINK-5-CHANGED: Interface FastEthernet0/0, changed state to up\n\n%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state to up\n\nCiscoRouter(config-if)#ip address 192.168.10.1 255.255.255.0\nCiscoRouter(config-if)#exit\nCiscoRouter(config)#\n\nCiscoRouter>enable\nCiscoRouter#config t\nEnter configuration commands, one per line.  End with CNTL/Z.\nCiscoRouter(config)#ip nat inside source static 192.168.10.11 200.0.10.11\nCiscoRouter(config)#int fa0/0\nCiscoRouter(config-if)#ip nat inside\nCiscoRouter(config-if)#exit\nCiscoRouter(config)#int se0/0/1\nCiscoRouter(config-if)#ip nat outside\nCiscoRouter(config-if)#exit\nCiscoRouter(config)#exit\nCiscoRouter#\n%SYS-5-CONFIG_I: Configured from console by console\n\nCiscoRouter#show ip nat translations\nPro  Inside global     Inside local       Outside local      Outside global\n---  200.0.10.11       192.168.10.11      ---                ---\n\nCiscoRouter#clear ip nat translations* (to clear all nat config)\nCiscoRouter#config t\nEnter configuration commands, one per line.  End with CNTL/Z.\nCiscoRouter(config)#ip route 100.0.0.0 255.0.0.0 202.100.10.1\nCiscoRouter(config)#do wr\nBuilding configuration...\n[OK]\nCiscoRouter(config)#', '2025-07-31 09:29:54', '2025-07-31 09:29:54', 1),
('test se', 'sdvqsdvwrqwregvwrwrvwrvwr', '2025-08-15 11:58:46', '2025-08-15 11:58:46', 0),
('Test_time', 'Test local time 5.30+', '2025-08-04 06:43:32', '2025-08-04 06:43:32', 0),
('Zz', 'A', '2025-08-17 14:53:23', '2025-08-17 14:53:23', 0);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `admin_settings`
--
ALTER TABLE `admin_settings`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `user_files`
--
ALTER TABLE `user_files`
  ADD PRIMARY KEY (`username`),
  ADD KEY `idx_delete_at` (`delete_at`);

--
-- Indexes for table `user_texts`
--
ALTER TABLE `user_texts`
  ADD PRIMARY KEY (`username`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `admin_settings`
--
ALTER TABLE `admin_settings`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

DELIMITER $$
--
-- Events
--
CREATE DEFINER=`u569550465_kavindu`@`127.0.0.1` EVENT `delete_old_records` ON SCHEDULE EVERY 1 MINUTE STARTS '2024-12-31 07:08:25' ON COMPLETION NOT PRESERVE ENABLE DO DELETE FROM your_table WHERE created_at < NOW() - INTERVAL 5 MINUTE$$

DELIMITER ;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
